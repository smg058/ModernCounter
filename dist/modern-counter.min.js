/**
 * ModernCounter - A lightweight, dependency-free JavaScript library for animating numerical values
 *
 * @class
 * @description Creates smooth counting animations for numerical values with configurable options.
 *              The counter can be started, stopped, restarted, and toggled, making it suitable
 *              for various use cases including statistics, dashboards, and scroll-triggered animations.
 *
 * @example
 * // Basic usage
 * const counter = new ModernCounter(document.querySelector('.counter'), {
 *   from: 0,
 *   to: 1000,
 *   speed: 2000
 * });
 * counter.start();
 *
 * @example
 * // With scroll trigger
 * ScrollTrigger.create({
 *   trigger: element,
 *   start: "top 80%",
 *   onEnter: () => new ModernCounter(element).start()
 * });
 *
 * @author Chayson Media Group <dev@chayson.com>
 * @version 1.0.0
 * @license MIT
 */
class t{static DEFAULTS={from:0,to:0,speed:1e3,refreshInterval:100,decimals:0,formatter:(t,e)=>t.toFixed(e.decimals),onUpdate:null,onComplete:null,scrollTrigger:null};constructor(e,s={}){this.element=e,this.options={...t.DEFAULTS,...this.getDataOptions(),...s},this.init(),this.options.scrollTrigger&&"undefined"!=typeof gsap&&this.setupScrollTrigger()}getDataOptions(){const t={};return this.element.hasAttribute("data-from")&&(t.from=parseFloat(this.element.getAttribute("data-from"))||0),this.element.hasAttribute("data-to")&&(t.to=parseFloat(this.element.getAttribute("data-to"))||0),this.element.hasAttribute("data-speed")&&(t.speed=parseInt(this.element.getAttribute("data-speed"),10)||1e3),this.element.hasAttribute("data-refresh-interval")?t.refreshInterval=parseInt(this.element.getAttribute("data-refresh-interval"),10)||100:this.element.hasAttribute("data-refreshInterval")&&(t.refreshInterval=parseInt(this.element.getAttribute("data-refreshInterval"),10)||100),this.element.hasAttribute("data-decimals")&&(t.decimals=parseInt(this.element.getAttribute("data-decimals"),10)||0),t}setupScrollTrigger(){const t={trigger:this.element,start:"top 80%",onEnter:()=>this.start(),...this.options.scrollTrigger};gsap.ScrollTrigger?gsap.ScrollTrigger.create(t):this.setupScrollListener()}setupScrollListener(){const t=()=>{const e=this.element.getBoundingClientRect(),s=window.innerHeight||document.documentElement.clientHeight;e.top<=.8*s&&e.bottom>=0&&(this.start(),window.removeEventListener("scroll",t))};window.addEventListener("scroll",t),t()}init(){this.value=this.options.from,this.loops=Math.ceil(this.options.speed/this.options.refreshInterval),this.loopCount=0,this.increment=(this.options.to-this.options.from)/this.loops}update=()=>{this.value+=this.increment,this.loopCount++,this.render(),"function"==typeof this.options.onUpdate&&this.options.onUpdate.call(this.element,this.value),this.loopCount>=this.loops&&(clearInterval(this.interval),this.value=this.options.to,this.render(),"function"==typeof this.options.onComplete&&this.options.onComplete.call(this.element,this.value))};animateWithGSAP(){if("undefined"!=typeof gsap){this.stop();const t=this.options.from;return this.value=t,gsap.to(this,{value:this.options.to,duration:this.options.speed/1e3,ease:"power2.out",onUpdate:()=>{this.render(),"function"==typeof this.options.onUpdate&&this.options.onUpdate.call(this.element,this.value)},onComplete:()=>{"function"==typeof this.options.onComplete&&this.options.onComplete.call(this.element,this.options.to)}}),!0}return!1}render(){this.element.textContent=this.options.formatter.call(this.element,this.value,this.options)}restart(){return this.stop(),this.init(),this.start(),this}start(){return this.stop(),this.render(),this.animateWithGSAP()||(this.interval=setInterval(this.update,this.options.refreshInterval)),this}stop(){return this.interval&&(clearInterval(this.interval),this.interval=null),"undefined"!=typeof gsap&&gsap.killTweensOf(this),this}toggle(){return this.interval?this.stop():this.start(),this}}const e=(e,s={})=>new t(e,s).start();class s{static DEFAULTS={duration:2,scrollTrigger:null,onComplete:null};constructor(t,e={}){this.element=t;const i={};t.hasAttribute("data-to")&&(i.to=t.getAttribute("data-to")),t.hasAttribute("data-duration")&&(i.duration=parseFloat(t.getAttribute("data-duration"))||2),this.options={...s.DEFAULTS,...i,...e},this.options.to&&(this.buildCounter(),this.options.scrollTrigger?"undefined"!=typeof ScrollTrigger?ScrollTrigger.create({trigger:this.element,start:"top 80%",onEnter:()=>this.start(),...this.options.scrollTrigger}):this.setupScrollListener():setTimeout((()=>this.start()),100))}setupScrollListener(){const t=()=>{const e=this.element.getBoundingClientRect(),s=window.innerHeight||document.documentElement.clientHeight;e.top<=.8*s&&e.bottom>=0&&(this.start(),window.removeEventListener("scroll",t))};window.addEventListener("scroll",t),t()}buildCounter(){this.element.innerHTML="",this.element.style.display="flex",this.element.style.justifyContent="center";const t=this.options.to.toString().split("");this.digitElements=[],t.forEach((t=>{const e=document.createElement("div");e.className="vertical-counter-digit",e.style.overflow="hidden",e.style.position="relative",e.style.width="0.6em",e.style.height="1em",e.style.margin="0 2px";const s=document.createElement("div");s.className="vertical-counter-strip",s.style.position="absolute",s.style.top="0",s.style.left="0",s.style.width="100%",s.style.textAlign="center";for(let t=0;t<=9;t++){const e=document.createElement("div");e.className="vertical-counter-number",e.style.height="1em",e.style.lineHeight="1em",e.textContent=t,s.appendChild(e)}e.appendChild(s),this.element.appendChild(e),this.digitElements.push({column:e,strip:s,value:parseInt(t,10)||0})}))}start(){let t=0;const e=this.digitElements.length,s=()=>{t++,t>=e&&"function"==typeof this.options.onComplete&&this.options.onComplete.call(this)};return this.digitElements.forEach(((t,e)=>{const{strip:i,value:n}=t;i.style.transition="none",i.style.transform="translateY(0)",i.offsetHeight,i.style.transition=`transform ${this.options.duration}s ease ${.1*e}s`;const o=()=>{i.removeEventListener("transitionend",o),s()};i.addEventListener("transitionend",o),setTimeout((()=>{i.style.transform=`translateY(-${n}em)`}),50)})),this}reset(){return this.digitElements.forEach((t=>{t.strip.style.transition="none",t.strip.style.transform="translateY(0)",t.strip.offsetHeight})),this}}const i=(t=".vertical-counter",e={})=>{const i=document.querySelectorAll(t),n=[];return i.forEach((t=>{n.push(new s(t,e))})),n};export{t as ModernCounter,s as VerticalCounter,e as initCounter,i as initVerticalCounters};
//# sourceMappingURL=modern-counter.min.js.map
