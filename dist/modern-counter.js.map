{"version":3,"file":"modern-counter.js","sources":["../src/index.js"],"sourcesContent":["/**\r\n * ModernCounter - A lightweight, dependency-free JavaScript library for animating numerical values\r\n *\r\n * @class\r\n * @description Creates smooth counting animations for numerical values with configurable options.\r\n *              The counter can be started, stopped, restarted, and toggled, making it suitable\r\n *              for various use cases including statistics, dashboards, and scroll-triggered animations.\r\n *\r\n * @example\r\n * // Basic usage\r\n * const counter = new ModernCounter(document.querySelector('.counter'), {\r\n *   from: 0,\r\n *   to: 1000,\r\n *   speed: 2000\r\n * });\r\n * counter.start();\r\n *\r\n * @example\r\n * // With scroll trigger\r\n * ScrollTrigger.create({\r\n *   trigger: element,\r\n *   start: \"top 80%\",\r\n *   onEnter: () => new ModernCounter(element).start()\r\n * });\r\n *\r\n * @author Chayson Media Group <dev@chayson.com>\r\n * @version 1.0.0\r\n * @license MIT\r\n */\r\nclass ModernCounter {\r\n  /**\r\n   * Default configuration options for the counter\r\n   *\r\n   * @static\r\n   * @type {Object}\r\n   * @property {number} from - Starting value (default: 0)\r\n   * @property {number} to - Target value (default: 0)\r\n   * @property {number} speed - Animation duration in milliseconds (default: 1000)\r\n   * @property {number} refreshInterval - Update frequency in milliseconds (default: 100)\r\n   * @property {number} decimals - Number of decimal places to show (default: 0)\r\n   * @property {Function} formatter - Function to format the displayed value\r\n   * @property {Function|null} onUpdate - Callback for each counter update\r\n   * @property {Function|null} onComplete - Callback when counting finishes\r\n   * @property {Object|null} scrollTrigger - GSAP ScrollTrigger configuration (if GSAP is available)\r\n   */\r\n  static DEFAULTS = {\r\n    from: 0,\r\n    to: 0,\r\n    speed: 1000,\r\n    refreshInterval: 100,\r\n    decimals: 0,\r\n    formatter: (value, options) => value.toFixed(options.decimals),\r\n    onUpdate: null,\r\n    onComplete: null,\r\n    scrollTrigger: null\r\n  };\r\n\r\n  /**\r\n   * Creates a new ModernCounter instance\r\n   *\r\n   * @constructor\r\n   * @param {HTMLElement} element - The DOM element to attach the counter to\r\n   * @param {Object} [options={}] - Configuration options to override defaults\r\n   */\r\n  constructor(element, options = {}) {\r\n    this.element = element;\r\n    this.options = {\r\n      ...ModernCounter.DEFAULTS,\r\n      ...this.getDataOptions(),\r\n      ...options\r\n    };\r\n    this.init();\r\n\r\n    // Set up ScrollTrigger if specified and GSAP is available.\r\n    if (this.options.scrollTrigger && typeof gsap !== 'undefined') {\r\n      this.setupScrollTrigger();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extracts counter options from element's data attributes\r\n   *\r\n   * @private\r\n   * @returns {Object} Options object with properties from data attributes\r\n   */\r\n  getDataOptions() {\r\n    const options = {};\r\n\r\n    // Explicitly check each data attribute and parse it correctly.\r\n    if (this.element.hasAttribute('data-from')) {\r\n      options.from = parseFloat(this.element.getAttribute('data-from')) || 0;\r\n    }\r\n\r\n    if (this.element.hasAttribute('data-to')) {\r\n      options.to = parseFloat(this.element.getAttribute('data-to')) || 0;\r\n    }\r\n\r\n    if (this.element.hasAttribute('data-speed')) {\r\n      options.speed = parseInt(this.element.getAttribute('data-speed'), 10) || 1000;\r\n    }\r\n\r\n    if (this.element.hasAttribute('data-refresh-interval')) {\r\n      options.refreshInterval = parseInt(this.element.getAttribute('data-refresh-interval'), 10) || 100;\r\n    } else if (this.element.hasAttribute('data-refreshInterval')) {\r\n      // Support both kebab-case and camelCase attribute names.\r\n      options.refreshInterval = parseInt(this.element.getAttribute('data-refreshInterval'), 10) || 100;\r\n    }\r\n\r\n    if (this.element.hasAttribute('data-decimals')) {\r\n      options.decimals = parseInt(this.element.getAttribute('data-decimals'), 10) || 0;\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  /**\r\n   * Sets up a GSAP ScrollTrigger to start the animation.\r\n   *\r\n   * @private\r\n   * @returns (void)\r\n   */\r\n  setupScrollTrigger() {\r\n    // Create default ScrollTrigger configuration.\r\n    const triggerConfig = {\r\n      trigger: this.element,\r\n      start: 'top 80%',\r\n      onEnter: () => this.start(),\r\n      ...this.options.scrollTrigger\r\n    };\r\n\r\n    // Create the ScrollTrigger\r\n    if (gsap.ScrollTrigger) {\r\n      gsap.ScrollTrigger.create(triggerConfig);\r\n    } else {\r\n      console.warn('ScrollTrigger plugin not loaded, falling back to scroll listener'); // eslint-disable-line no-console\r\n      this.setupScrollListener();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets up a fallback scroll listener if ScrollTrigger isn't available\r\n   *\r\n   * @private\r\n   * @returns {void}\r\n   */\r\n  setupScrollListener() {\r\n    const checkScroll = () => {\r\n      const rect = this.element.getBoundingClientRect();\r\n      const windowHeight = window.innerHeight || document.documentElement.clientHeight;\r\n\r\n      if (rect.top <= windowHeight * 0.8 && rect.bottom >= 0) {\r\n        this.start();\r\n        window.removeEventListener('scroll', checkScroll);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', checkScroll);\r\n    checkScroll(); // Check initial position.\r\n  }\r\n\r\n  /**\r\n   * Initializes the counter with current options\r\n   *\r\n   * @private\r\n   * @returns {void}\r\n   */\r\n  init() {\r\n    this.value = this.options.from;\r\n    this.loops = Math.ceil(this.options.speed / this.options.refreshInterval);\r\n    this.loopCount = 0;\r\n    this.increment = (this.options.to - this.options.from) / this.loops;\r\n\r\n    // Debug log to verify correct values.\r\n    //console.log('Counter initialized with:', {\r\n    //  from: this.options.from,\r\n    //  to: this.options.to,\r\n    //  speed: this.options.speed,\r\n    //  refreshInterval: this.options.refreshInterval,\r\n    //  loops: this.loops,\r\n    //  increment: this.increment\r\n    //});\r\n  }\r\n\r\n  /**\r\n   * Updates the counter value on each animation frame\r\n   *\r\n   * @private\r\n   * @returns {void}\r\n   */\r\n  update = () => {\r\n    this.value += this.increment;\r\n    this.loopCount++;\r\n    this.render();\r\n\r\n    if (typeof this.options.onUpdate === 'function') {\r\n      this.options.onUpdate.call(this.element, this.value);\r\n    }\r\n\r\n    if (this.loopCount >= this.loops) {\r\n      clearInterval(this.interval);\r\n      this.value = this.options.to;\r\n      this.render();\r\n\r\n      if (typeof this.options.onComplete === 'function') {\r\n        this.options.onComplete.call(this.element, this.value);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Updates the counter with GSAP animation if available, falls back to interval method\r\n   *\r\n   * @private\r\n   * @returns {boolean|void}\r\n   */\r\n  animateWithGSAP() {\r\n    // Only use GSAP if available.\r\n    if (typeof gsap !== 'undefined') {\r\n      // Stop any existing animation.\r\n      this.stop();\r\n\r\n      // Store initial value for animation.\r\n      const startValue = this.options.from;\r\n      this.value = startValue;\r\n\r\n      // Create GSAP animation.\r\n      gsap.to(this, {\r\n        value: this.options.to,\r\n        duration: this.options.speed / 1000,\r\n        ease: 'power2.out',\r\n        onUpdate: () => {\r\n          this.render();\r\n          if (typeof this.options.onUpdate === 'function') {\r\n            this.options.onUpdate.call(this.element, this.value);\r\n          }\r\n        },\r\n        onComplete: () => {\r\n          if (typeof this.options.onComplete === 'function') {\r\n            this.options.onComplete.call(this.element, this.options.to);\r\n          }\r\n        }\r\n      });\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Renders the current counter value to the DOM\r\n   *\r\n   * @private\r\n   * @returns {void}\r\n   */\r\n  render() {\r\n    this.element.textContent = this.options.formatter.call(this.element, this.value, this.options);\r\n  }\r\n\r\n  /**\r\n   * Restarts the counter animation from the beginning\r\n   *\r\n   * @public\r\n   * @returns {ModernCounter} The counter instance for chaining\r\n   */\r\n  restart() {\r\n    this.stop();\r\n    this.init();\r\n    this.start();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Starts or resumes the counter animation\r\n   *\r\n   * @public\r\n   * @returns {ModernCounter} The counter instance for chaining\r\n   */\r\n  start() {\r\n    this.stop();\r\n    this.render();\r\n\r\n    // Try to use GSAP if available, fall back to interval method.\r\n    if (!this.animateWithGSAP()) {\r\n      this.interval = setInterval(this.update, this.options.refreshInterval);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Stops/pauses the counter animation\r\n   *\r\n   * @public\r\n   * @returns {ModernCounter} The counter instance for chaining\r\n   */\r\n  stop() {\r\n    if (this.interval) {\r\n      clearInterval(this.interval);\r\n      this.interval = null;\r\n    }\r\n\r\n    // Kill GSAP animation if running.\r\n    if (typeof gsap !== 'undefined') {\r\n      gsap.killTweensOf(this);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Toggles the counter animation between running and stopped states\r\n   *\r\n   * @public\r\n   * @returns {ModernCounter} The counter instance for chaining\r\n   */\r\n  toggle() {\r\n    if (this.interval) {\r\n      this.stop();\r\n    } else {\r\n      this.start();\r\n    }\r\n    return this;\r\n  }\r\n}\r\n\r\n/**\r\n * Helper function to quickly initialize a counter\r\n *\r\n * @param {HTMLElement} element - The DOM element to attach the counter to\r\n * @param {Object} [options={}] - Configuration options to override defaults\r\n * @returns {ModernCounter} The initialized counter instance\r\n */\r\nconst initCounter = (element, options = {}) => {\r\n  const counter = new ModernCounter(element, options);\r\n  return counter.start();\r\n};\r\n\r\n/**\r\n * VerticalCounter - A counter with rolling digit animation\r\n * This version uses CSS transitions for reliable animation\r\n */\r\nclass VerticalCounter {\r\n  /**\r\n   * Default configuration\r\n   */\r\n  static DEFAULTS = {\r\n    duration: 2,\r\n    scrollTrigger: null,\r\n    onComplete: null\r\n  };\r\n\r\n  /**\r\n   * Constructor\r\n   */\r\n  constructor(element, options = {}) {\r\n    this.element = element;\r\n\r\n    // Get data attributes\r\n    const dataOptions = {};\r\n    if (element.hasAttribute('data-to')) {\r\n      dataOptions.to = element.getAttribute('data-to');\r\n    }\r\n    if (element.hasAttribute('data-duration')) {\r\n      dataOptions.duration = parseFloat(element.getAttribute('data-duration')) || 2;\r\n    }\r\n\r\n    // Merge options\r\n    this.options = {\r\n      ...VerticalCounter.DEFAULTS,\r\n      ...dataOptions,\r\n      ...options\r\n    };\r\n\r\n    // Ensure we have a target value\r\n    if (!this.options.to) {\r\n      console.error('VerticalCounter requires a \"to\" value');\r\n      return;\r\n    }\r\n\r\n    // Build the counter\r\n    this.buildCounter();\r\n\r\n    // Set up scroll trigger if specified\r\n    if (this.options.scrollTrigger) {\r\n      if (typeof ScrollTrigger !== 'undefined') {\r\n        ScrollTrigger.create({\r\n          trigger: this.element,\r\n          start: 'top 80%',\r\n          onEnter: () => this.start(),\r\n          ...this.options.scrollTrigger\r\n        });\r\n      } else {\r\n        this.setupScrollListener();\r\n      }\r\n    } else {\r\n      // Start automatically after a small delay\r\n      setTimeout(() => this.start(), 100);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set up scroll listener as fallback\r\n   */\r\n  setupScrollListener() {\r\n    const checkScroll = () => {\r\n      const rect = this.element.getBoundingClientRect();\r\n      const windowHeight = window.innerHeight || document.documentElement.clientHeight;\r\n\r\n      if (rect.top <= windowHeight * 0.8 && rect.bottom >= 0) {\r\n        this.start();\r\n        window.removeEventListener('scroll', checkScroll);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', checkScroll);\r\n    checkScroll();\r\n  }\r\n\r\n  /**\r\n   * Build the counter DOM structure\r\n   */\r\n  buildCounter() {\r\n    // Clear element\r\n    this.element.innerHTML = '';\r\n\r\n    // Set container styles\r\n    this.element.style.display = 'flex';\r\n    this.element.style.justifyContent = 'center';\r\n\r\n    // Get digits\r\n    const digits = this.options.to.toString().split('');\r\n    this.digitElements = [];\r\n\r\n    // Create each digit\r\n    digits.forEach(digitValue => {\r\n      // Create column container\r\n      const column = document.createElement('div');\r\n      column.className = 'vertical-counter-digit';\r\n      column.style.overflow = 'hidden';\r\n      column.style.position = 'relative';\r\n      column.style.width = '0.6em';\r\n      column.style.height = '1em';\r\n      column.style.margin = '0 2px';\r\n\r\n      // Create digit strip containing all numbers 0-9\r\n      const strip = document.createElement('div');\r\n      strip.className = 'vertical-counter-strip';\r\n      strip.style.position = 'absolute';\r\n      strip.style.top = '0';\r\n      strip.style.left = '0';\r\n      strip.style.width = '100%';\r\n      strip.style.textAlign = 'center';\r\n\r\n      // Add each possible digit\r\n      for (let i = 0; i <= 9; i++) {\r\n        const digitEl = document.createElement('div');\r\n        digitEl.className = 'vertical-counter-number';\r\n        digitEl.style.height = '1em';\r\n        digitEl.style.lineHeight = '1em';\r\n        digitEl.textContent = i;\r\n        strip.appendChild(digitEl);\r\n      }\r\n\r\n      // Add to DOM\r\n      column.appendChild(strip);\r\n      this.element.appendChild(column);\r\n\r\n      // Store for animation\r\n      this.digitElements.push({\r\n        column,\r\n        strip,\r\n        value: parseInt(digitValue, 10) || 0\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Start the animation\r\n   */\r\n  start() {\r\n    // For tracking completion\r\n    let completeCount = 0;\r\n    const totalDigits = this.digitElements.length;\r\n\r\n    // Function to call when all digits are done\r\n    const checkCompletion = () => {\r\n      completeCount++;\r\n      if (completeCount >= totalDigits && typeof this.options.onComplete === 'function') {\r\n        this.options.onComplete.call(this);\r\n      }\r\n    };\r\n\r\n    // Animate each digit\r\n    this.digitElements.forEach((digit, index) => {\r\n      const { strip, value } = digit;\r\n\r\n      // Reset position first (if needed)\r\n      strip.style.transition = 'none';\r\n      strip.style.transform = 'translateY(0)';\r\n\r\n      // Force reflow to ensure the reset takes effect\r\n      strip.offsetHeight;\r\n\r\n      // Set up transition with delay for stagger effect\r\n      strip.style.transition = `transform ${this.options.duration}s ease ${index * 0.1}s`;\r\n\r\n      // Add transitionend listener for completion callback\r\n      const transitionEndHandler = () => {\r\n        strip.removeEventListener('transitionend', transitionEndHandler);\r\n        checkCompletion();\r\n      };\r\n      strip.addEventListener('transitionend', transitionEndHandler);\r\n\r\n      // Start animation\r\n      setTimeout(() => {\r\n        strip.style.transform = `translateY(-${value}em)`;\r\n      }, 50); // Small delay to ensure transition is applied\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Reset the counter\r\n   */\r\n  reset() {\r\n    this.digitElements.forEach(digit => {\r\n      digit.strip.style.transition = 'none';\r\n      digit.strip.style.transform = 'translateY(0)';\r\n\r\n      // Force reflow\r\n      digit.strip.offsetHeight;\r\n    });\r\n\r\n    return this;\r\n  }\r\n}\r\n\r\n/**\r\n * Initialize all vertical counters\r\n */\r\nconst initVerticalCounters = (selector = '.vertical-counter', options = {}) => {\r\n  const elements = document.querySelectorAll(selector);\r\n  const counters = [];\r\n\r\n  elements.forEach(element => {\r\n    counters.push(new VerticalCounter(element, options));\r\n  });\r\n\r\n  return counters;\r\n};\r\n\r\nexport { ModernCounter, VerticalCounter, initCounter, initVerticalCounters };\r\n"],"names":[],"mappings":"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"}